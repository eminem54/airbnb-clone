{"version":3,"sources":["Utility.js","room/room.jsx","searchBar/searchBar.jsx","searchFilter/buttonBase.jsx","searchFilter/modalBase.jsx","searchFilter/calender.jsx","searchFilter/dateFilter.jsx","searchFilter/peopleFilter.jsx","searchFilter/priceFilter.jsx","searchFilter/searchFilter.jsx","navigator/navigator.jsx","Apollo.js","serverAddress.js","main/filterQuery.js","main/main.jsx","login/login.jsx","app.jsx","serviceWorker.js","index.js"],"names":["fetchUsingMethod","url","a","methodType","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","formatNumber","num","replace","WrapAirbnb","styled","div","ItemContainer","WrapItem","ItemContent","ItemImage","img","ItemTitle","WrapPriceText","RoomCount","Room","isLogin","rooms","length","items","itemlist","forEach","v","i","push","key","room","src","imgurl","kind","title","className","option1","option2","option3","option4","price","toString","star","item","makeItemList","WrapInput","WrapInput2","props","width","height","Td","SearchInput","input","parseInt","slice","SearchBar","id","ButtonBase","button","able","Btn","WrapModalBase","Modal","WrapDateModal","WrapCalender","WrapTitle","CalenderTitle","TABLE","table","DayCell","th","AvailableTD","td","SelectedTd","BlankTD","getfirstDayOfMonth","dateObject","moment","startOf","format","isSameDate","moment1","moment2","year","isSame","month","date","removeClassFromTable","tableId","document","getElementById","childNodes","tr","tagName","classList","contains","remove","Calender","useState","setDateObject","useContext","FilterContext","checkout","setCheckout","filter","setFilter","totalSlots","blanks","makeBlanks","daysInMonth","compareMoment","d","set","isAfter","isBefore","makeAvailableDay","calCheckout","logicInClickButton","step","add","clone","useEffect","onClick","e","target","newFilter","months","setMomentToCheckout","checkoutMoment","innerHTML","weekdaysShort","map","day","rows","cells","row","makeDayTd","DateBtn","DateFilter","WrapPeopleModal","PeopleModal","Flexdiv1","Flexdiv2","PeopleBtn","adult","kid","baby","text","PeopleFilter","setBaby","setAdult","setKid","WrapPriceModal","WrapPriceFilter","WrapRangeSlider","WrapPriceInput","PriceInput","PriceBtn","minPrice","maxPrice","isPriceClicked","checkMaxPrice","makePriceBtnText","isAble","PriceFilter","setIsPriceClicked","slider","setSlider","setMinPrice","setMaxPrice","value","changeByRef","noUiSlider","startPrice","endPrice","checkPriceRange","number","console","log","range","min","max","start","onSlide","left","right","instanceRef","instance","connect","type","defaultValue","onChange","isNaN","SplitLine","WrapFilter","SearchFilter","nodes","parentNode","NaviTitle","LoginBtn","LogoutBtn","WelcomeText","WrapNavigator","Navigators","Navigator","to","client","ApolloClient","uri","fetchQuery","gqlQuery","query","roomsQuery","gql","WrapMain","WrapFixedNavigator","React","createContext","Main","setRooms","isAblePeople","isAblePrice","guest","startDate","finishDate","Query","toISOString","then","roomsbydateandpeopleandprice","roomsbydateandpeople","roomsbydateandprice","roomsbydate","roomsbypeopleandprice","roomsbypeople","roomsbyprice","Provider","LoginForm","MyIdInput","MyPwInput","SignupBtn","Login","setLogin","clickLoginBtn","pw","address","status","placeholder","autoFocus","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e644ca6.chunk.js","sourcesContent":["// https://stackoverflow.com/questions/1484506/random-color-generator 참고\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i += 1) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction makeElement(...className) {\n  const ele = document.createElement('div');\n  ele.classList.add(...className);\n  return ele;\n}\n\nfunction $(query, home = document) {\n  return home.querySelector(query);\n}\n\nfunction $$(query, home = document) {\n  return home.querySelectorAll(query);\n}\n\nasync function fetchUsingMethod(url, { methodType, data }) {\n  const response = await fetch(url, {\n    method: methodType,\n    mode: 'cors',\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrer: 'no-referrer', // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response;\n}\n\nconst formatNumber = num => {\n  return num.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n};\n\nfunction removeClassFromNodeList(nodes, className) {\n  nodes.forEach(v => {\n    if (v.classList.contains(className)) v.classList.remove(className);\n  });\n}\nexport {\n  $,\n  $$,\n  getRandomColor,\n  makeElement,\n  fetchUsingMethod,\n  removeClassFromNodeList,\n  formatNumber\n};\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { formatNumber } from '../Utility';\nconst WrapAirbnb = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  z-index: 1;\n`;\n\nconst ItemContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst WrapItem = styled.div`\n  display: inline-block;\n  flex-direction: row;\n  margin-right: 15px;\n  margin-bottom: 5px;\n  max-width: 100%;\n  :hover {\n    outline-color: #67e2da;\n    outline-style: solid;\n    outline-width: 4px;\n  }\n`;\n\nconst ItemContent = styled.div``;\n\nconst ItemImage = styled.img`\n  width: 318px;\n  height: 212px;\n`;\n\n/* http://blog.tjsrms.me/css-%EB%A7%90%EC%A4%84%EC%9E%84-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0/\n말줄임\n */\nconst ItemTitle = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n  width: 318px;\n  overflow: hidden;\n  font-size: 18px;\n`;\nconst WrapPriceText = styled.div`\n  font-weight: 800;\n  font-size: 17px;\n`;\n\nconst RoomCount = styled.div`\n  width: 100%;\n  height: 50px;\n  font-size: 30px;\n  padding-left: 60px;\n  font-weight: 700;\n`;\n\nconst item = ({ key, room }) => {\n  return (\n    <WrapItem key={key}>\n      <ItemImage src={room.imgurl} />\n      <ItemContent>\n        {room.kind}\n        <ItemTitle>{room.title}</ItemTitle>\n        <div className=\"item-option\">\n          {`\n          ${room.option1} \n          ${room.option2} \n          ${room.option3} \n          ${room.option4} \n        `}\n        </div>\n        <WrapPriceText>{`₩ ${formatNumber(room.price.toString())}`}</WrapPriceText>\n        <div className=\"item-detail\">\n          <span>&#x2B50;</span>\n          {room.star}\n        </div>\n      </ItemContent>\n    </WrapItem>\n  );\n};\n\nconst Room = ({ isLogin, rooms }) => {\n  if (rooms.length === 0) {\n    return <div></div>;\n  }\n\n  const makeItemList = items => {\n    const itemlist = [];\n    items.forEach((v, i) => {\n      itemlist.push(item({ key: i, room: v }));\n    });\n    return itemlist;\n  };\n\n  return (\n    <WrapAirbnb>\n      <RoomCount>{`${rooms.length}개의 숙소`}</RoomCount>\n      <ItemContainer>{makeItemList(rooms)}</ItemContainer>\n    </WrapAirbnb>\n  );\n};\n\nexport default Room;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst WrapInput = styled.div`\n  background-color: white;\n  z-index: 9;\n  padding: 10px;\n`;\n\nconst WrapInput2 = styled.div`\n  width: '${props => (props.width ? props.width : '400px')}';\n  height: ${props => (props.height ? props.height : '45px')};\n  border: 2px solid #ebebeb;\n  display: table;\n  padding: 5px;\n`;\n\nconst Td = styled.div`\n  display: table-cell;\n  vertical-align: middle;\n`;\n\nconst SearchInput = styled.input`\n  width: ${props => (props.width ? `${parseInt(props.width.slice(0, 3)) * 0.75}px` : '300px')};\n  height: ${props => (props.height ? `${parseInt(props.height.slice(0, 3)) * 0.75}px` : '38px')};\n  font-weight: 800;\n  font-size: 20px;\n  background-color: white;\n  width: 100%;\n  text-overflow: ellipsis;\n  color: rgb(72, 72, 72);\n  border-width: 0px;\n  border-style: initial;\n  border-color: initial;\n  border-image: initial;\n  margin: 0px;\n  padding: 0px;\n  outline: none;\n}\n`;\n\nconst SearchBar = ({ id }) => {\n  return (\n    <WrapInput id={id}>\n      <WrapInput2>\n        <Td>\n          <SearchInput />\n        </Td>\n      </WrapInput2>\n    </WrapInput>\n  );\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const ButtonBase = styled.button`\n  display: inline-flex;\n  padding: 5px 15px;\n  border-radius: 0.3rem;\n  font-size: 17px;\n  margin: 0 10px;\n  background-color: ${props => (props.able ? '#018489' : 'transparent')};\n  color: ${props => (props.able ? 'white' : 'black')};\n  outline: none;\n\n  &.clicked {\n    background-color: #018489;\n    color: white;\n    :hover {\n      background-color: #018489;\n      color: white;\n    }\n  }\n\n  :hover {\n    background-color: #dfdfdf;\n  }\n\n  + div {\n    display: none;\n  }\n\n  &.clicked + div {\n    display: initial;\n  }\n`;\n\nexport const Btn = styled.div`\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  border-radius: 1rem;\n  font-size: 30px;\n  text-align: center;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nconst WrapModalBase = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 500%;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n`;\n\nconst Modal = styled.div`\n  position: relative;\n  width: 400px;\n  height: 400px;\n  background-color: white;\n  left: 20px;\n  top: 190px;\n`;\n\nexport { WrapModalBase, Modal };\n","import React, { useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { WrapModalBase, Modal } from './modalBase';\nimport { Btn } from './buttonBase.jsx';\nimport { FilterContext } from '../main/main.jsx';\n\n/* \n1. 캐러셀을 만든다.\n  1.트랜지션을 써야한다.\n2. 트릭을 쓴다.\n  1. 무슨트릭이 있을까.\n    1. 상태변수 [start, end]를 이용해서 start가 있다면 달력이동시에 start \n*/\n\nconst WrapDateModal = styled(WrapModalBase)``;\n\nconst WrapCalender = styled(Modal)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 600px;\n  height: 400px;\n`;\n\nconst WrapTitle = styled.div`\n  dispaly: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst CalenderTitle = styled.div`\n  display: inline-flex;\n  font-size: 25px;\n`;\nconst TABLE = styled.table`\n  border-collapse: collapse;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst DayCell = styled.th`\n  width: 50px;\n  height: 30px;\n  padding-top: 9px;\n`;\nconst AvailableTD = styled.td`\n  width: 50px;\n  height: 30px;\n  text-align: center;\n  border: 1px solid grey;\n\n  :hover {\n    background-color: #dfdfdf;\n  }\n\n  &.clicked {\n    background-color: #018489;\n    :hover {\n      background-color: #018489;\n    }\n  }\n\n  &.selected {\n    background-color: #67e2da;\n    :hover {\n      background-color: #67e2da;\n    }\n  }\n\n  &.unavailable {\n    cursor: initial;\n    background-color: #ffffff;\n    color: rgba(0, 0, 0, 0.5);\n    :hover {\n      background-color: #ffffff;\n    }\n  }\n`;\n\nconst SelectedTd = styled.td`\n  width: 50px;\n  height: 30px;\n  text-align: center;\n  border: 1px solid grey;\n  cursor: initial;\n  background-color: #67e2da;\n  :hover {\n    background-color: #67e2da;\n  }\n`;\nconst BlankTD = styled.td`\n  width: 50px;\n  height: 30px;\n`;\n\nconst MakeWeekdayshortname = () => {\n  return moment.weekdaysShort().map(day => {\n    return (\n      <DayCell key={day} className=\"week-day\">\n        {day}\n      </DayCell>\n    );\n  });\n};\n\nconst getfirstDayOfMonth = dateObject => {\n  return moment(dateObject)\n    .startOf('month')\n    .format('d');\n};\n\nconst makeBlanks = dateObject => {\n  let blanks = [];\n  for (let i = 0; i < getfirstDayOfMonth(dateObject); i++) {\n    blanks.push(<BlankTD className=\"calendar-day empty\">{''}</BlankTD>);\n  }\n  return blanks;\n};\n\nconst isSameDate = (moment1, moment2) => {\n  const year = moment1.isSame(moment2, 'year');\n  const month = moment1.isSame(moment2, 'month');\n  const date = moment1.isSame(moment2, 'date');\n  return year && month && date;\n};\n\nconst makeAvailableDay = (dateObject, checkout) => {\n  let daysInMonth = [];\n  const compareMoment = moment();\n  for (let d = 1; d <= dateObject.daysInMonth(); d++) {\n    compareMoment.set('year', dateObject.year());\n    compareMoment.set('month', dateObject.month());\n    compareMoment.set('date', d);\n    if (moment().isAfter(compareMoment)) {\n      daysInMonth.push(\n        <AvailableTD key={d} className=\"calendar-day unavailable\">\n          {d}\n        </AvailableTD>\n      );\n      continue;\n    }\n\n    if (checkout[0] && !checkout[1]) {\n      if (isSameDate(compareMoment, checkout[0])) {\n        daysInMonth.push(\n          <AvailableTD key={d} className=\"calendar-day clicked\">\n            {d}\n          </AvailableTD>\n        );\n        continue;\n      }\n    }\n\n    if (checkout[1]) {\n      if (isSameDate(compareMoment, checkout[0]) || isSameDate(compareMoment, checkout[1])) {\n        daysInMonth.push(\n          <AvailableTD key={d} className=\"calendar-day clicked\">\n            {d}\n          </AvailableTD>\n        );\n        continue;\n      }\n      if (compareMoment.isAfter(checkout[0]) && compareMoment.isBefore(checkout[1])) {\n        daysInMonth.push(\n          <SelectedTd key={d} className=\"calendar-day\">\n            {d}\n          </SelectedTd>\n        );\n        continue;\n      }\n    }\n    daysInMonth.push(\n      <AvailableTD key={d} className=\"calendar-day\">\n        {d}\n      </AvailableTD>\n    );\n  }\n  return daysInMonth;\n};\n\nconst makeDayTd = totalSlots => {\n  const rows = [];\n  let cells = [];\n\n  totalSlots.forEach((row, i) => {\n    if (i % 7 !== 0) {\n      cells.push(row);\n    } else {\n      rows.push(cells);\n      cells = [];\n      cells.push(row);\n    }\n    if (i === totalSlots.length - 1) {\n      rows.push(cells);\n    }\n  });\n\n  let daysinmonth = rows.map((d, i) => {\n    return <tr>{d}</tr>;\n  });\n  return daysinmonth;\n};\n\nfunction removeClassFromTable(tableId, className) {\n  const table = document.getElementById(tableId);\n  table.childNodes.forEach(tr => {\n    if (tr.tagName === 'TH') return;\n    tr.childNodes.forEach(td => {\n      if (td.classList.contains(className)) {\n        td.classList.remove(className);\n      }\n    });\n  });\n}\n\nconst Calender = () => {\n  const [dateObject, setDateObject] = useState(moment());\n  const { checkout, setCheckout, filter, setFilter } = useContext(FilterContext);\n  const totalSlots = [...makeBlanks(dateObject), ...makeAvailableDay(dateObject, checkout)];\n  const [calCheckout, setCalCheckout] = useState(checkout);\n\n  const logicInClickButton = step => {\n    removeClassFromTable('calender-table', 'clicked');\n    removeClassFromTable('calender-table', 'selected');\n    dateObject.add(step, 'month');\n    const clone = dateObject.clone();\n    setDateObject(clone);\n  };\n  const clickLeftButton = e => {\n    logicInClickButton('-1', e);\n  };\n  const clickRightButton = e => {\n    logicInClickButton('1', e);\n  };\n\n  useEffect(() => {}, dateObject);\n  useEffect(() => {}, calCheckout);\n\n  const clickTableEvent = e => {\n    const setMomentToCheckout = () => {\n      e.target.classList.add('clicked');\n      const checkoutMoment = dateObject.clone();\n      checkoutMoment.set('date', e.target.innerHTML);\n      return checkoutMoment;\n    };\n    if (!e.target.tagName === 'TD') {\n      return e;\n    }\n    if (e.target.classList.contains('unavailable')) {\n      return e;\n    }\n\n    if (e.target.classList.contains('clicked')) {\n    } else {\n      if (checkout[0]) {\n        setCheckout([checkout[0], setMomentToCheckout()]);\n      } else {\n        setCheckout([setMomentToCheckout(), null]);\n      }\n    }\n  };\n\n  const clickOuterModal = e => {\n    if (e.target.id === 'date-outer-modal') {\n      const dateBtn = document.getElementById('date-btn');\n      dateBtn.classList.remove('clicked');\n      if (checkout[0] && checkout[1]) {\n        const newFilter = { ...filter };\n        newFilter.checkout = checkout;\n        setFilter(newFilter);\n      }\n    }\n  };\n\n  return (\n    <WrapDateModal id={'date-outer-modal'} onClick={clickOuterModal}>\n      <WrapCalender id={'inner-modal'}>\n        <WrapTitle>\n          <Btn id={'left-btn'} onClick={clickLeftButton}>\n            {'<'}\n          </Btn>\n          <CalenderTitle>\n            {dateObject.year()} {moment.months(dateObject.month())}\n          </CalenderTitle>\n          <Btn id={'right-btn'} onClick={clickRightButton}>\n            {'>'}\n          </Btn>\n        </WrapTitle>\n\n        <TABLE id={'calender-table'} onClick={clickTableEvent}>\n          {MakeWeekdayshortname()}\n          {makeDayTd(totalSlots)}\n        </TABLE>\n      </WrapCalender>\n    </WrapDateModal>\n  );\n};\n\nexport default Calender;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ButtonBase } from './buttonBase.jsx';\nimport Calender from './calender.jsx';\n\nconst DateBtn = ({ checkout, setCheckout }) => {\n  if (!checkout[0] && !checkout[1]) {\n    return (\n      <ButtonBase id={'date-btn'} able={checkout[1]}>\n        {'날짜'}\n      </ButtonBase>\n    );\n  } else if (checkout[0] && !checkout[1]) {\n    return (\n      <ButtonBase id={'date-btn'} able={checkout[1]}>{`${checkout[0].month() +\n        '월 ' +\n        checkout[0].date() +\n        '일'}~체크아웃`}</ButtonBase>\n    );\n  } else {\n    return (\n      <ButtonBase id={'date-btn'} able={checkout[1]}>\n        {`${checkout[0].month() + '월 ' + checkout[0].date() + '일'}~${checkout[1].month() +\n          '월 ' +\n          checkout[1].date() +\n          '일'}`}\n      </ButtonBase>\n    );\n  }\n};\n\nconst DateFilter = ({ checkout, setCheckout }) => {\n  return (\n    <>\n      <DateBtn checkout={checkout} setCheckout={setCheckout} />\n      <Calender checkout={checkout} setCheckout={setCheckout} />\n    </>\n  );\n};\n\nexport default DateFilter;\n","import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { ButtonBase, Btn } from './buttonBase.jsx';\nimport { WrapModalBase, Modal } from './modalBase';\nimport { FilterContext } from '../main/main.jsx';\n\nconst WrapPeopleModal = styled(WrapModalBase)``;\nconst PeopleModal = styled(Modal)``;\n\nconst Flexdiv1 = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  justify-contetn: center;\n  align-items: center;\n`;\n\nconst Flexdiv2 = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  font-size: 20px;\n  justify-contetn: center;\n  align-items: center;\n`;\n\nconst PeopleBtn = ({ adult = 0, kid = 0, baby = 0 }) => {\n  let text = '';\n  if (!adult && !kid && !baby) {\n    text = '인원';\n  }\n  const big = adult + kid;\n  if (adult || kid) {\n    text += `성인 ${big}명,`;\n  }\n  if (baby) {\n    text += `유아 ${baby}명,`;\n  }\n  if (text[text.length - 1] === ',') {\n    text = text.slice(0, -1);\n  }\n  return (\n    <ButtonBase id={'people-btn'} able={text === '인원' ? null : true}>\n      {text}\n    </ButtonBase>\n  );\n};\n\nconst PeopleFilter = () => {\n  // const [adult, setAdult] = useState(0);\n  // const [kid, setKid] = useState(0);\n  const [baby, setBaby] = useState(0);\n  const { adult, setAdult, kid, setKid, filter, setFilter } = useContext(FilterContext);\n  const plusAdultBtn = e => {\n    setAdult(adult + 1);\n  };\n  const minusAdultBtn = e => {\n    if (adult <= 0) {\n      return e;\n    }\n    if (adult - 1 === 0 && (kid !== 0 || baby !== 0)) {\n      return e;\n    }\n    setAdult(adult - 1);\n  };\n  const plusKidBtn = e => {\n    if (adult === 0) {\n      setAdult(1);\n    }\n    setKid(kid + 1);\n  };\n  const minusKidBtn = e => {\n    if (kid <= 0) {\n      return e;\n    }\n    setKid(kid - 1);\n  };\n  const plusBabyBtn = e => {\n    if (adult === 0) {\n      setAdult(1);\n    }\n    setBaby(baby + 1);\n  };\n  const minusBabyBtn = e => {\n    if (baby <= 0) {\n      return e;\n    }\n    setBaby(baby - 1);\n  };\n\n  useEffect(() => {});\n\n  const clickOuterModal = e => {\n    if (e.target.id === 'people-outer-modal') {\n      const dateBtn = document.getElementById('people-btn');\n      dateBtn.classList.remove('clicked');\n      if (adult !== 0) {\n        const newFilter = { ...filter };\n        newFilter.adult = adult;\n        newFilter.kid = kid;\n        setFilter(newFilter);\n      }\n    }\n  };\n  return (\n    <>\n      <PeopleBtn adult={adult} kid={kid} baby={baby}>\n        인원\n      </PeopleBtn>\n      <WrapPeopleModal id=\"people-outer-modal\" onClick={clickOuterModal}>\n        <PeopleModal>\n          <Flexdiv1>\n            <Flexdiv2>\n              <span>성인</span>\n              <span>\n                <Btn onClick={minusAdultBtn}>-</Btn>\n              </span>\n              <span>\n                <div>{`${adult}명`}</div>\n              </span>\n              <span>\n                <Btn onClick={plusAdultBtn}>+</Btn>\n              </span>\n            </Flexdiv2>\n            <Flexdiv2>\n              <span>어린이</span>\n              <span>\n                <Btn onClick={minusKidBtn}>-</Btn>\n              </span>\n              <span>\n                <div>{`${kid}명`}</div>\n              </span>\n              <span>\n                <Btn onClick={plusKidBtn}>+</Btn>\n              </span>\n            </Flexdiv2>\n            <Flexdiv2>\n              <span>어린이</span>\n              <span>\n                <Btn onClick={minusBabyBtn}>-</Btn>\n              </span>\n              <span>\n                <div>{`${baby}명`}</div>\n              </span>\n              <span>\n                <Btn onClick={plusBabyBtn}>+</Btn>\n              </span>\n            </Flexdiv2>\n            <Flexdiv2></Flexdiv2>\n          </Flexdiv1>\n        </PeopleModal>\n      </WrapPeopleModal>\n    </>\n  );\n};\n\nexport default PeopleFilter;\n","import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { ButtonBase, Btn } from './buttonBase.jsx';\nimport { WrapModalBase, Modal } from './modalBase';\nimport Nouislider from 'nouislider-react';\nimport 'nouislider/distribute/nouislider.css';\nimport { formatNumber } from '../Utility';\nimport { FilterContext } from '../main/main.jsx';\n\nexport const MINPRICE = '20000';\nexport const MAXPRICE = '300000';\nconst MINPRICENUM = 20000;\nconst MAXPRICENUM = 300000;\n\nconst WrapPriceModal = styled(WrapModalBase)``;\nconst WrapPriceFilter = styled(Modal)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 600px;\n  height: 400px;\n`;\n\nconst WrapRangeSlider = styled.div`\n  display: block;\n  width: 80%;\n`;\n\nconst WrapPriceInput = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 10px;\n`;\n\nconst PriceInput = styled.input`\n  width: 100px;\n  height: 30px;\n  font-size: 20px;\n`;\n\nconst makePriceBtnText = ({ minPrice, maxPrice, isPriceClicked }) => {\n  const checkMaxPrice = () => {\n    if (maxPrice[0] !== MAXPRICE) return true;\n    return false;\n  };\n  if (!isPriceClicked[0]) {\n    if (minPrice[0] === MINPRICE) {\n      return checkMaxPrice() ? `최대 ₩ ${formatNumber(maxPrice[0])}` : `가격`;\n    } else {\n      return checkMaxPrice()\n        ? `₩ ${formatNumber(minPrice[0])} ~ ₩ ${formatNumber(maxPrice[0])}`\n        : `₩ ${formatNumber(minPrice[0])}+`;\n    }\n  } else {\n    if (minPrice[0] === MINPRICE) {\n      return checkMaxPrice() ? `최대 ₩ ${formatNumber(maxPrice[0])}` : `₩ 20,000+`;\n    } else {\n      return checkMaxPrice()\n        ? `₩ ${formatNumber(minPrice[0])} ~ ₩ ${formatNumber(maxPrice[0])}`\n        : `₩ ${formatNumber(minPrice[0])}+`;\n    }\n  }\n};\n\nconst PriceBtn = ({ minPrice, maxPrice, isPriceClicked }) => {\n  const text = makePriceBtnText({ minPrice, maxPrice, isPriceClicked });\n  const isAble = !isPriceClicked[0] && (minPrice[0] !== MINPRICE || maxPrice[0] !== MAXPRICE);\n  return (\n    <ButtonBase id={'price-btn'} able={isAble}>\n      {text}\n    </ButtonBase>\n  );\n};\n\nconst PriceFilter = ({ isPriceClicked, setIsPriceClicked }) => {\n  const [slider, setSlider] = useState(null);\n  const { minPrice, setMinPrice, maxPrice, setMaxPrice, filter, setFilter } = useContext(\n    FilterContext\n  );\n\n  const onChangeSlide = ([left, right]) => {\n    setMinPrice([left.slice(0, -3)]);\n    setMaxPrice([right.slice(0, -3)]);\n  };\n\n  const clickOuterModal = e => {\n    if (e.target.id === 'price-outer-modal') {\n      const priceBtn = document.getElementById('price-btn');\n      priceBtn.classList.remove('clicked');\n      setIsPriceClicked([false]);\n      if (minPrice !== MINPRICE || maxPrice !== MAXPRICE) {\n        const newFilter = { ...filter };\n        newFilter.minPrice = minPrice;\n        newFilter.maxPrice = maxPrice;\n        console.log(newFilter);\n        setFilter(newFilter);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const startPrice = document.getElementById('start-price');\n    startPrice.value = minPrice[0];\n  }, minPrice);\n\n  useEffect(() => {\n    const endPrice = document.getElementById('end-price');\n    endPrice.value = maxPrice[0];\n  }, maxPrice);\n\n  const changeByRef = e => {\n    if (slider && slider.noUiSlider) {\n      const startPrice = document.getElementById('start-price').value;\n      const endPrice = document.getElementById('end-price').value;\n      slider.noUiSlider.set([startPrice, endPrice]);\n    }\n  };\n\n  const checkPriceRange = number => {\n    if (number >= MINPRICENUM && number <= MAXPRICENUM) return true;\n    return false;\n  };\n  const changeStartPrice = e => {\n    changeByRef(e);\n    const num = parseInt(e.target.value);\n    if (!isNaN(num) && checkPriceRange(num)) {\n      setMinPrice([num.toString()]);\n    }\n  };\n  const changeEndPrice = e => {\n    changeByRef(e);\n    const num = parseInt(e.target.value);\n    if (!isNaN(num) && checkPriceRange(num)) {\n      setMaxPrice([num.toString()]);\n    }\n  };\n  return (\n    <>\n      <PriceBtn minPrice={minPrice} maxPrice={maxPrice} isPriceClicked={isPriceClicked}>\n        인원\n      </PriceBtn>\n      <WrapPriceModal id={'price-outer-modal'} onClick={clickOuterModal}>\n        <WrapPriceFilter>\n          <WrapRangeSlider>\n            <Nouislider\n              range={{ min: MINPRICENUM, max: MAXPRICENUM }}\n              start={[MINPRICENUM, MAXPRICENUM]}\n              onSlide={onChangeSlide}\n              instanceRef={instance => {\n                if (instance && !slider) {\n                  setSlider(instance);\n                }\n              }}\n              connect\n            />\n          </WrapRangeSlider>\n          <WrapPriceInput>\n            <PriceInput\n              id={'start-price'}\n              type={'text'}\n              defaultValue={MINPRICE}\n              onChange={changeStartPrice}\n            />\n            {'  -  '}\n            <PriceInput\n              id={'end-price'}\n              type={'text'}\n              defaultValue={MAXPRICE}\n              onChange={changeEndPrice}\n            />\n          </WrapPriceInput>\n        </WrapPriceFilter>\n      </WrapPriceModal>\n    </>\n  );\n};\n\nexport default PriceFilter;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport DateFilter from './dateFilter.jsx';\nimport PeopleFilter from './peopleFilter.jsx';\nimport PriceFilter from './priceFilter.jsx';\nimport { removeClassFromNodeList } from '../Utility';\nconst SplitLine = styled.div`\n  border-bottom: 1px solid black;\n`;\n\nconst WrapFilter = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  padding: 10px 20px;\n  z-index: 8;\n  background-color: white;\n`;\n\nconst SearchFilter = ({ checkout, setCheckout }) => {\n  const [isPriceClicked, setIsPriceClicked] = useState([false]);\n\n  const toggleSelectedChild = e => {\n    if (e.target.tagName === 'BUTTON') {\n      if (e.target.classList.contains('clicked')) {\n        e.target.classList.remove('clicked');\n        if (e.target.id === 'price-btn') {\n          setIsPriceClicked([false]);\n        }\n      } else {\n        removeClassFromNodeList(e.target.parentNode.childNodes, 'clicked');\n        e.target.classList.add('clicked');\n        if (e.target.id === 'price-btn') {\n          setIsPriceClicked([true]);\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <SplitLine />\n      <WrapFilter onClick={toggleSelectedChild}>\n        <DateFilter checkout={checkout} setCheckout={setCheckout}></DateFilter>\n        <PeopleFilter></PeopleFilter>\n        <PriceFilter\n          isPriceClicked={isPriceClicked}\n          setIsPriceClicked={setIsPriceClicked}\n        ></PriceFilter>\n      </WrapFilter>\n      <SplitLine />\n    </>\n  );\n};\n\nexport default SearchFilter;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst NaviTitle = styled.div`\n  display: flex;\n  align-items: center;\n  height: 48px;\n  font-size: 2rem;\n  margin-left: 5rem;\n`;\n\nconst LoginBtn = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 1.5rem;\n  position: relative;\n  top: 0px;\n  right: 30px;\n  background-color: rgb(231, 75, 127);\n  text-decoration: none;\n  margin: 3px;\n  border-radius: 5px;\n  padding: 3px;\n`;\n\nconst LogoutBtn = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 1.5rem;\n  position: relative;\n  top: 0px;\n  right: 30px;\n  background-color: rgb(231, 75, 127);\n  text-decoration: none;\n  cursor: pointer;\n  margin: 3px;\n  border-radius: 5px;\n  padding: 3px;\n`;\n\nconst WelcomeText = styled.div`\n  display: ${props => (props.isLogin ? 'flex' : 'none')};\n  align-items: center;\n  font-size: 1.5rem;\n`;\n\nconst WrapNavigator = styled.div`\n  background-color: white;\n  width: 100%;\n  z-index: 10;\n`;\n\nconst Navigators = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst Navigator = ({ isLogin }) => {\n  return (\n    <WrapNavigator>\n      <Navigators>\n        <NaviTitle>\n          <Link to=\"/\">Boost Camp</Link>\n        </NaviTitle>\n        <WelcomeText isLogin={isLogin}>Welcome!</WelcomeText>\n        {isLogin ? (\n          <LogoutBtn>Log out</LogoutBtn>\n        ) : (\n          <LoginBtn>\n            <Link to=\"/login\">Log in</Link>\n          </LoginBtn>\n        )}\n      </Navigators>\n    </WrapNavigator>\n  );\n};\n\nexport default Navigator;\n","import ApolloClient from 'apollo-boost';\nimport serverAddress from './serverAddress';\n\nconst client = new ApolloClient({\n  uri: `${serverAddress}/graphql`\n});\n\nexport const fetchQuery = async gqlQuery => {\n  const response = await client.query({\n    query: gqlQuery\n  });\n  return response.data;\n};\n\nexport default client;\n","const address = 'http://localhost:3080';\nexport default address;\n","import { gql } from 'apollo-boost';\n\nexport const roomsQuery = gql`\n  {\n    rooms {\n      kind\n      price\n      title\n      imgurl\n      option1\n      option2\n      option3\n      option4\n      star\n    }\n  }\n`;\n\nexport const roomsbypriceQuery = ({ minPrice, maxPrice }) => {\n  return gql`\n    {\n      roomsbyprice (startPrice: \"${minPrice[0]}\", endPrice: \"${maxPrice[0]}\") {\n        kind\n        price\n        title\n        imgurl\n        option1\n        option2\n        option3\n        option4\n        star\n      }\n    }\n  `;\n};\n\nexport const roomsbypeopleQuery = ({ guest }) => {\n  return gql`\n    {\n      roomsbypeople (guest: \"${guest}\") {\n        kind\n        price\n        title\n        imgurl\n        option1\n        option2\n        option3\n        option4\n        star\n      }\n    }\n  `;\n};\n\nexport const roomsbydateQuery = ({ startDate, finishDate }) => {\n  return gql`\n    {\n      roomsbydate (startDate: \"${startDate}\", finishDate: \"${finishDate}\") {\n        kind\n        price\n        title\n        imgurl\n        option1\n        option2\n        option3\n        option4\n        star\n      }\n    }\n  `;\n};\n\nexport const roomsbypeopleandpriceQuery = ({ guest, minPrice, maxPrice }) => {\n  return gql`\n    {\n      roomsbypeopleandprice (guest: \"${guest}\" startPrice: \"${minPrice[0]}\", endPrice: \"${\n    maxPrice[0]\n  }\") {\n        kind\n        price\n        title\n        imgurl\n        option1\n        option2\n        option3\n        option4\n        star\n      }\n    }\n  `;\n};\n\nexport const roomsbydateandpeopleQuery = ({ startDate, finishDate, guest }) => {\n  return gql`\n    {\n      roomsbydateandpeople (guest: \"${guest}\", startDate: \"${startDate}\", finishDate: \"${finishDate}\") {\n        kind\n        price\n        title\n        imgurl\n        option1\n        option2\n        option3\n        option4\n        star\n      }\n    }\n  `;\n};\n\nexport const roomsbydateandpriceQuery = ({ startDate, finishDate, minPrice, maxPrice }) => {\n  return gql`\n    {\n      roomsbydateandprice (startPrice: \"${minPrice[0]}\", endPrice: \"${\n    maxPrice[0]\n  }\", startDate: \"${startDate}\", finishDate: \"${finishDate}\") {\n        kind\n        price\n        title\n        imgurl\n        option1\n        option2\n        option3\n        option4\n        star\n      }\n    }\n  `;\n};\n\nexport const roomsbydateandpeopleandpriceQuery = ({\n  guest,\n  startDate,\n  finishDate,\n  minPrice,\n  maxPrice\n}) => {\n  return gql`\n    {\n      roomsbydateandpeopleandprice (guest: \"${guest}\", startPrice: \"${minPrice[0]}\", endPrice: \"${\n    maxPrice[0]\n  }\", startDate: \"${startDate}\", finishDate: \"${finishDate}\") {\n        kind\n        price\n        title\n        imgurl\n        option1\n        option2\n        option3\n        option4\n        star\n      }\n    }\n  `;\n};\n","import React, { useEffect, useState } from 'react';\nimport Room from '../room/room.jsx';\nimport SearchBar from '../searchBar/searchBar.jsx';\nimport SearchFilter from '../searchFilter/searchFilter.jsx';\nimport styled from 'styled-components';\nimport Navigator from '../navigator/navigator.jsx';\nimport { fetchQuery } from '../Apollo';\nimport { MINPRICE, MAXPRICE } from '../searchFilter/priceFilter.jsx';\nimport * as Query from './filterQuery';\n\nconst WrapMain = styled.div``;\n\nconst WrapFixedNavigator = styled.div`\n  position: sticky;\n  top: 0;\n`;\n\nexport const FilterContext = React.createContext();\n\nconst Main = ({ isLogin }) => {\n  const [rooms, setRooms] = useState([]);\n  const [checkout, setCheckout] = useState([null, null]);\n\n  const [minPrice, setMinPrice] = useState([MINPRICE]);\n  const [maxPrice, setMaxPrice] = useState([MAXPRICE]);\n  const [adult, setAdult] = useState(0);\n  const [kid, setKid] = useState(0);\n\n  const [filter, setFilter] = useState({ checkout, minPrice, maxPrice, adult, kid });\n  const isAbleDate = () => checkout[0] && checkout[1];\n  const isAblePeople = () => adult !== 0;\n  const isAblePrice = () => minPrice[0] !== MINPRICE || maxPrice[0] !== MAXPRICE;\n  useEffect(() => {\n    if (isAbleDate()) {\n      if (isAblePeople()) {\n        if (isAblePrice()) {\n          fetchQuery(\n            Query.roomsbydateandpeopleandpriceQuery({\n              guest: adult + kid,\n              startDate: checkout[0].toISOString().slice(0, 10),\n              finishDate: checkout[1].toISOString().slice(0, 10),\n              minPrice,\n              maxPrice\n            })\n          ).then(data => setRooms(data.roomsbydateandpeopleandprice));\n        } else {\n          fetchQuery(\n            Query.roomsbydateandpeopleQuery({\n              guest: adult + kid,\n              startDate: checkout[0].toISOString().slice(0, 10),\n              finishDate: checkout[1].toISOString().slice(0, 10)\n            })\n          ).then(data => setRooms(data.roomsbydateandpeople));\n        }\n      } else {\n        if (isAblePrice()) {\n          fetchQuery(\n            Query.roomsbydateandpriceQuery({\n              startDate: checkout[0].toISOString().slice(0, 10),\n              finishDate: checkout[1].toISOString().slice(0, 10),\n              minPrice,\n              maxPrice\n            })\n          ).then(data => setRooms(data.roomsbydateandprice));\n        } else {\n          fetchQuery(\n            Query.roomsbydateQuery({\n              startDate: checkout[0].toISOString().slice(0, 10),\n              finishDate: checkout[1].toISOString().slice(0, 10)\n            })\n          ).then(data => setRooms(data.roomsbydate));\n        }\n      }\n    } else {\n      if (isAblePeople()) {\n        if (isAblePrice()) {\n          fetchQuery(\n            Query.roomsbypeopleandpriceQuery({ guest: adult + kid, minPrice, maxPrice })\n          ).then(data => setRooms(data.roomsbypeopleandprice));\n        } else {\n          fetchQuery(Query.roomsbypeopleQuery({ guest: adult + kid })).then(data =>\n            setRooms(data.roomsbypeople)\n          );\n        }\n      } else {\n        if (isAblePrice()) {\n          fetchQuery(Query.roomsbypriceQuery({ minPrice, maxPrice })).then(data =>\n            setRooms(data.roomsbyprice)\n          );\n        } else {\n          //\n        }\n      }\n    }\n  }, [filter]);\n  useEffect(() => {\n    fetchQuery(Query.roomsQuery).then(data => setRooms(data.rooms));\n  }, rooms);\n\n  return (\n    <FilterContext.Provider\n      value={{\n        checkout,\n        setCheckout,\n        minPrice,\n        setMinPrice,\n        maxPrice,\n        setMaxPrice,\n        adult,\n        setAdult,\n        kid,\n        setKid,\n        filter,\n        setFilter\n      }}\n    >\n      <WrapMain>\n        <WrapFixedNavigator>\n          <Navigator isLogin={isLogin} />\n          <SearchBar id={'main-search-bar'} />\n          <SearchFilter checkout={checkout} setCheckout={setCheckout} />\n        </WrapFixedNavigator>\n        <Room rooms={rooms} />\n      </WrapMain>\n    </FilterContext.Provider>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { fetchUsingMethod } from '../Utility.js';\nimport address from '../serverAddress';\nimport { Redirect, Link } from 'react-router-dom';\n\nconst LoginForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10rem auto;\n`;\n\nconst MyIdInput = styled.input`\n  width: 18rem;\n  height: 2.5rem;\n  margin-bottom: 0.3rem;\n  margin-top: 0.3rem;\n`;\n\nconst MyPwInput = styled.input`\n  width: 18rem;\n  height: 2.5rem;\n  margin-bottom: 0.3rem;\n`;\n\nconst LoginBtn = styled.button`\n  width: 18rem;\n  height: 2rem;\n  margin-bottom: 0.3rem;\n`;\n\nconst SignupBtn = styled.button`\n  width: 18rem;\n  height: 2rem;\n`;\n\nconst Login = ({ isLogin, setLogin }) => {\n  const clickLoginBtn = async e => {\n    const id = document.getElementById('id').value;\n    const pw = document.getElementById('pw').value;\n    const response = await fetchUsingMethod(address + '/login', {\n      methodType: 'POST',\n      data: { id, pw }\n    });\n    if (response.status !== 200) {\n      return setLogin(!isLogin);\n    }\n    setLogin(!isLogin);\n  };\n\n  if (isLogin) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"wrap-login-form\">\n      <LoginForm>\n        <div>Login</div>\n        <MyIdInput id=\"id\" type=\"text\" placeholder=\"아이디\" autoFocus />\n        <MyPwInput id=\"pw\" type=\"password\" placeholder=\"비밀번호\" />\n        <LoginBtn onClick={clickLoginBtn}>Log in</LoginBtn>\n        <SignupBtn>\n          <Link to=\"/signup\">Sign up</Link>\n        </SignupBtn>\n      </LoginForm>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Main from './main/main.jsx';\nimport Login from './login/login.jsx';\nimport './App.css';\n\nconst App = () => {\n  const [isLogin, setLogin] = useState(false);\n  return (\n    <Router>\n      <Route exact path=\"/\" component={() => <Main isLogin={isLogin} />}></Route>\n      <Route path=\"/login\" component={() => <Login isLogin={isLogin} setLogin={setLogin} />} />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}